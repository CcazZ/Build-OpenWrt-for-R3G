name: OpenWrt-for-R3G 主路由

on:
  workflow_dispatch:
  watch:
    types: started
  release:
    types: published
  push:
    branches:
      - main
    paths:
      - 'r3g.config'

env:
  REPO_URL: https://github.com/Lienol/openwrt
  REPO_BRANCH: 21.02
  CONFIG_FILE: r3g.config
  USE_SH: test.sh
  DIY_SH: diy.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  SSH_ACTION: false
  TNAME: MI_R3G
  #编译流程开关，设置为true则执行编译流程并上传编译好的固件
  #设置为false则只上传配置文件
  COMPILE: true 
  

jobs:
  build:
    runs-on: ubuntu-24.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        mv sh/$USE_SH r3g.sh
        chmod +x r3g.sh
        sh r3g.sh init
        mv -f r3g.sh openwrt/
        mv r3g.config openwrt/.config

    - name: Prepare resouces
      run: |
        cd openwrt/package
        sh ../r3g.sh clone
        cd ..
        sh r3g.sh addSrc
        sh r3g.sh feeds

    - name: Load custom configuration
      run: |
        cd openwrt
        # 修改默认IP
        sed -i 's/192.168.1.1/192.168.22.1/g' package/base-files/files/bin/config_generate

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: env.SSH_ACTION == 'true'
      with:
        limit-access-to-actor: true

    - name: Organize config file
      run: |
        mkdir -p config
        cp -f openwrt/.config config/$CONFIG_FILE
        
    - name: Upload .config file
      uses: actions/upload-artifact@master
      with:
        name: config
        path: config

    - name: Download package
      if: env.COMPILE == 'true'
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      if: env.COMPILE == 'true'
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cp openwrt/.config openwrt/bin/targets/*/*/
        cd openwrt/bin/targets/*/*
        rm -rf packages
        rm -f version.buildinfo feeds.buildinfo sha256sums \
        *.manifest
        md5sum config.buildinfo >> md5.txt
        md5sum *-initramfs-kernel.bin >> md5.txt
        md5sum *-squashfs-sysupgrade.bin >> md5.txt
        md5sum  *-squashfs-rootfs0.bin >> md5.txt
        md5sum  *-squashfs-kernel1.bin >> md5.txt
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_MI-R3G
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        cd ${FIRMWARE}
        zip -r OpenWrt_$TNAME.zip *
        wget https://github.com/Mikubill/cowtransfer-uploader/releases/download/v0.4.23/cowtransfer-uploader_0.4.23_linux_amd64.tar.gz
        tar -zxf cowtransfer-uploader_0.4.23_linux_amd64.tar.gz
        ./cowtransfer-uploader -s -p 8 OpenWrt_$TNAME.zip
